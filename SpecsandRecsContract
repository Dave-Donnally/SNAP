3.0 Features
This section describes the specifications of the features of the SNAP project. 

3.1 Bug Fixes/Usability Enhancements
This feature will improve the usability of the application and fix bugs that prevent the user from completing the pipeline.  The most prominent bug is a failure when uploading a file. Due to the intermittent appearance of this bug, we believe this bug may be due to special character use and unicode characters. The next bug is the frequency bounds checkbox not disabling the parameter. The final bug is the bug seen when a user modifies a combobox on the Upload page that is not in the expected order. The combo boxes following the modified box should reset but they do not. The usability enhancements are related to improving the user’s ability to identify when a file is processing, identifying when a file is completed processing, and cancelling a file process.
3.2 Multithreading File Processing 
This feature is desired to increase the speed at which the system can process files. By multithreading the application, files can be processed simultaneously rather than sequentially. This process will only improve the processing time when the user is performing processes on multiple files. Otherwise, the application will perform the processing at the time seen currently.
3.3 Heuristics for Selecting Processing Parameters
This feature is related to selecting the parameters for processing a file during the upload/NLP and Network Generation. The first parameter will be used as a setting for the natural language process that allows the user to filter words based on POS tags. These tags allow the user to filter out common phrases and collocations based on the their category of parts of speech. The next parameter will be used as a setting for the Network Generation. This parameter feature will examine the words in the file during the upload for determine the counts to generate a histogram. The user can view the histogram and the word frequencies easily. This will aid the user when selecting upper and lower bounds for the frequency threshold setting. 
3.4 Integrate an Additional NLP Framework 
This feature will provide the user with an additional NLP framework to choose during the upload/NLP stage. The framework choices that can potentially be added are Gate, SpaCy, and OpenNLP. Ideally, each of these frameworks will be added but due to time constraints, it is unclear if this will be possible. These frameworks offer additional features that may be useful for future developers to use to improve upon our work.
4.0 Specifications and Requirements
4.1 Bug Fixes/Usability Enhancements Requirements
These requirements are related to improving current functionality and improving the usability of the website. 

REQ-1.1
Description: The application shall identify and remove all unicode and special characters from the .txt files during the Upload/NLP stage. The goal is to eliminate the upload file bug.
Assumptions: The user wants these characters to be removed.
Dependencies: None

REQ-1.2
Description: The application shall allow the user to uncheck the frequency option and not enter any number in the bound text boxes. The goal is to eliminate the bug seen when setting the Network Generation frequency threshold bounds.
Assumptions: None
Dependencies: None

REQ-1.3 
Description: The application shall reset the combo boxes after an out of order modification of a combo box response. The goal is to make sure the user updates the responses that are dependent on one another.
Assumptions: None
Dependencies: None

REQ-1.4
Description: The application shall indicate a file is processing with a spinning wheel.
Assumptions: There is an open source library that has a animated graphic like a spinning wheel.
Dependencies: None

REQ-1.5
Description: The system shall indicate file processing complete for a pipeline stage with a dialog box.
Assumptions: None
Dependencies: None

REQ-1.5.1
Description: The system shall indicate a file upload is complete and successful with a green checkmark.
Assumptions: There is an open source graphic green checkmark.
Dependencies: REQ-2.1

REQ-1.5.2
Description: The system shall indicate a file network generation is complete and successful with a green checkmark.
Assumptions:  There is an open source graphic green checkmark.
Dependencies: REQ-2.2

REQ-1.5.3
Description: The system shall indicate a file network analysis is complete and successful with a green checkmark.
Assumptions:  There is an open source graphic green checkmark.
Dependencies: REQ-2.3

REQ-1.5.4
Description: The system shall indicate a file network visualization is complete and successful with a green checkmark.
Assumptions:  There is an open source graphic green checkmark.
Dependencies: REQ 2.4

REQ-1.6
Description:The system shall provide a cancel button for each pipeline stage to cancel the current process.
Assumptions: None
Dependencies:  None

REQ-1.6.1
Description: The system shall provide a cancel button on the Upload page for cancelling the current upload/NLP process. The cancel button may be able to cancel the all the files in a multiple file batch or cancel a specific file from processing.
Assumptions: None
Dependencies: REQ-2.1

REQ-1.6.2
Description: The system shall provide a cancel button on the Network Generation page for cancelling the current network generation process.The cancel button may be able to cancel the all the files in a multiple file batch or cancel a specific file from processing. 
Assumptions: None
Dependencies: REQ-2.2

REQ-1.6.3
Description: The system shall provide a cancel button on the Network Analysis page for cancelling the current network analysis process. The cancel button may be able to cancel the all the files in a multiple file batch or cancel a specific file from processing. 
Assumptions:
Dependencies: REQ-2.3

Functional Requirement 1.6.4
Description: The system shall provide a cancel button on the Upload page for cancelling the current network visualization process. The cancel button may be able to cancel the all the files in a multiple file batch or cancel a specific file from processing. 
Assumptions:
Dependencies: REQ-2.4

REQ-1.7
Description: The system shall download a batch of files after compressing the files into a zip file.
Assumptions:  There is a tool that is open source to compress the files.
Dependencies: None
4.2 Multithreading File Processing Requirements
These requirements are related to the effort to transition the application to a multithreaded application. This effort will improve the speed of the file processing. 

REQ-2.1
Description: The application should multithread upload/ NLP stage processing so multiple files can process more quickly.
Assumptions: The application processing functions are coded in such a way that they can be multithreaded.
Dependencies: None

REQ-2.2
Description: The application should multithread Network Generation stage processing so multiple files can process more quickly.
Assumptions: The application processing functions are coded in such a way that they can be multithreaded.
Dependencies: None

REQ-2.3: 
Description:The application should multithread Network Analysis stage processing so multiple files can process more quickly.
Assumptions: The application processing functions are coded in such a way that they can be multithreaded.
Dependencies: None

REQ-2.4
Description: The application should multithread Network Visualization stage processing so multiple files can process more quickly.
Assumptions: The application processing functions are coded in such a way that they can be multithreaded.
Dependencies: None
4.3 Heuristics for Selecting Processing Parameters Requirements
The requirements in this section are related to improving the settings available to the user to indicate parameters for the network generation process and natural language process.

REQ-3.1
Description: The application should provide a word frequency for histogram to aid the user in Network Generation settings.
Assumptions:  There is an open source tool in Python to use for graphing.
Dependencies: None

REQ-3.2
Description: The application should provide a filter setting based on parts of speech tags to eliminate from the Upload/NLP output file.
Assumptions: The current frameworks will provide sufficient tagging functionality.
Dependencies: None
4.4 Integrate an Additional NLP Framework Requirements
The requirements in this section are related to adding additional natural language processing frameworks to the application as an option for the user. 

REQ-4.1.1
Description: The application may integrate an additional NLP framework, Gate.
Assumptions: The API will work with the current code or be modified quickly enough to complete on time.
Dependencies: None

REQ-4.1.2
Description: The application may integrate an additional NLP framework, SpaCy.
Assumptions:  The API will work with the current code or be modified quickly enough to complete on time.
Dependencies: None

REQ-4.1.3
Description: The application may integrate an additional NLP framework, OpenNLP.
Assumptions: The API will work with the current code or be modified quickly enough to complete on time.
Dependencies: None


